{% raw %}


if (typeof config.board_uri === "undefined") {
	var matches = document.URL.match({% endraw %}/\/([0-9a-zA-Z\+$_\u0080-\uFFFF]{1,58})\/($|{{ config.dir.res|replace({'/': '\\/'}) }}{{ config.file_page|replace({'%d': '\\d+', '.': '\\.'}) }}|{{ config.file_index|replace({'.': '\\.'}) }}|{{ config.dir.res|replace({'/': '\\/'}) }}{{ config.file_page50|replace({'+': '\\+', '%d': '\\d+', '.': '\\.'}) }}|{{ config.file_page|replace({'%d': '\\d+', '.': '\\.'}) }}|{{ config.catalog_link|replace({'.': '\\.'}) }})/{% raw %});
	config['board_uri'] = (matches ? matches[1] : false);
}

if (typeof config.active_page === "undefined") {
	config['active_page'] = "other";
}

 



var is_test_mode = localStorage.testKey == 'true';
var is_mobile = navigator.userAgent.match(/iPhone|iPod|iPad|Android|Opera Mini|Blackberry|PlayBook|Windows Phone|Tablet PC|Windows CE|IEMobile/i) ? true : false;
var is_firefox = /Firefox/i.test(navigator.userAgent);
var localTime = new Date().getTime() / 1000;

	
function getServerTime()
{
	return serverTime + ((new Date().getTime() / 1000) - localTime);
}

function saveSettings(){

	var settings = {};

	for (var key in localStorage) 
	{
		if(!key.startsWith('_cache') && key != 'auth' && key != 'cacheMedia' && key != 'optionNotice')
			settings[key] = localStorage[key];
  	}



	var text = JSON.stringify(settings),
    blob = new Blob([text], { type: 'text/plain' }),
    anchor = document.createElement('a');

	anchor.download = "settings.txt";
	anchor.href = (window.webkitURL || window.URL).createObjectURL(blob);
	anchor.dataset.downloadurl = ['text/plain', anchor.download, anchor.href].join(':');
	anchor.click();
}

function loadSettings(){


	var str = prompt("Paste your storage data");

	var obj = JSON.parse(str);
		if (!obj) return false;
	
	localStorage.clear();
		
	for (var i in obj) {
		  localStorage[i] = obj[i];
	}
	
	document.location.reload();

}

function getHTMLOfSelection () 
{
    var range;
    if (document.selection && document.selection.createRange) {
      range = document.selection.createRange();
      return range.htmlText;
    }
    else if (window.getSelection) {
      var selection = window.getSelection();
      if (selection.rangeCount > 0) {
        range = selection.getRangeAt(0);
        var clonedSelection = range.cloneContents();
        var div = document.createElement('div');
        div.appendChild(clonedSelection);
        return div.innerHTML;
      }
      else {
        return '';
      }
    }
    else {
      return '';
    }
}

function getSelectedText(citate = false)
{

	var sel = getHTMLOfSelection();

	if(sel.length > 30 && (sel.startsWith('<article') || sel.startsWith('<section')))
	{
		var div = $(sel);

		if(div.length > 0)
		{
			var text = div.find('.post-message').html();
			
			if(text)
				sel=text;
		}
	}

	sel = sel.replace(new RegExp("<p>", 'g'), "");
	sel = sel.replace(new RegExp("</p>", 'g'), "\n");
	sel = sel.replace(new RegExp("<br>", 'g'), "");
	sel = sel.replace(new RegExp("^", 'gm'), ">");
	sel = sel.replace(new RegExp("<love>", 'g'), "[love]");
	sel = sel.replace(new RegExp("</love>", 'g'), "[/love]");
	sel = sel.replace(new RegExp("<del>", 'g'), "[spoiler]");
	sel = sel.replace(new RegExp("</del>", 'g'), "[/spoiler]");

	 
	sel = sel.replace(new RegExp("<i class=\"s42 s42-([^\"| ]+)[^>]+><\/i>", 'g'), '::$1::');
	sel = sel.replace(new RegExp("<a[^>]+>([^<]+)<\/a>", 'gm'), '$1');
	sel = sel.replace(/&gt;/g, '>');

 
	sel =sel.replace(new RegExp("<blockquote>>", 'g'), "");
	sel =sel.replace(new RegExp("</blockquote>", 'g'), "");
	sel =sel.replace(new RegExp("</blockquote", 'g'), "");
	sel =sel.replace(new RegExp("<blockquote>", 'g'), "");

	if(citate)
	{
		sel =sel.replace(new RegExp("^> \n", 'gm'), "");
		sel =sel.replace(new RegExp("^>$", 'gm'), "");

		if(sel.length > 0 && sel[sel.length-1] != '\n')
			sel+='\n';
	}

	return sel;
} 








/* 
 * main.js - This file is compiled and contains code from the following scripts, concatenated together in order:
 * {% endraw %}{{ config.additional_javascript|join(', ') }}{% raw %}
 * Please see those files for licensing and authorship information.
 * Compiled on {% endraw %}{{ time()|date("%c") }}{% raw %}
 */



/* gettext-compatible _ function, example of usage:
 *
 * > // Loading pl_PL.json here (containing polish translation strings generated by tools/i18n_compile.php)
 * > alert(_("Hello!"));
 * Witaj!
 */
function _(s) {
	return (typeof l10n != 'undefined' && typeof l10n[s] != 'undefined') ? l10n[s] : s;
}

/* printf-like formatting function, example of usage:
 *
 * > alert(fmt("There are {0} birds on {1} trees", [3,4]));
 * There are 3 birds on 4 trees
 * > // Loading pl_PL.json here (containing polish translation strings generated by tools/locale_compile.php)
 * > alert(fmt(_("{0} users"), [3]));
 * 3 uzytkownikow
 */
function fmt(s,a) {
	return s.replace(/\{([0-9]+)\}/g, function(x) { return a[x[1]]; });
}

function until($timestamp) {
		var $difference = $timestamp - Date.now()/1000|0, $num;
		switch(true){
		case ($difference < 60):
				return "" + $difference + ' ' + _('second(s)');
		case ($difference < 3600): //60*60 = 3600
				return "" + ($num = Math.round($difference/(60))) + ' ' + _('minute(s)');
		case ($difference < 86400): //60*60*24 = 86400
				return "" + ($num = Math.round($difference/(3600))) + ' ' + _('hour(s)');
		case ($difference < 604800): //60*60*24*7 = 604800
				return "" + ($num = Math.round($difference/(86400))) + ' ' + _('day(s)');
		case ($difference < 31536000): //60*60*24*365 = 31536000
				return "" + ($num = Math.round($difference/(604800))) + ' ' + _('week(s)');
		default:
				return "" + ($num = Math.round($difference/(31536000))) + ' ' + _('year(s)');
		}
}

function ago($timestamp) {
		var $difference = (Date.now()/1000|0) - $timestamp, $num;
		switch(true){
		case ($difference < 60) :
				return "" + $difference + ' ' + _('second(s)');
		case ($difference < 3600): //60*60 = 3600 
				return "" + ($num = Math.round($difference/(60))) + ' ' + _('minute(s)');
		case ($difference <  86400): //60*60*24 = 86400
				return "" + ($num = Math.round($difference/(3600))) + ' ' + _('hour(s)');
		case ($difference < 604800): //60*60*24*7 = 604800
				return "" + ($num = Math.round($difference/(86400))) + ' ' + _('day(s)');
		case ($difference < 31536000): //60*60*24*365 = 31536000
				return "" + ($num = Math.round($difference/(604800))) + ' ' + _('week(s)');
		default:
				return "" + ($num = Math.round($difference/(31536000))) + ' ' + _('year(s)');
		}
}

var datelocale =
		{ days: [_('Sunday'), _('Monday'), _('Tuesday'), _('Wednesday'), _('Thursday'), _('Friday'), _('Saturday')]
		, shortDays: [_("Sun"), _("Mon"), _("Tue"), _("Wed"), _("Thu"), _("Fri"), _("Sat")]
		, months: [_('January'), _('February'), _('March'), _('April'), _('May'), _('June'), _('July'), _('August'), _('September'), _('October'), _('November'), _('December')]
		, shortMonths: [_('Jan'), _('Feb'), _('Mar'), _('Apr'), _('May'), _('Jun'), _('Jul'), _('Aug'), _('Sep'), _('Oct'), _('Nov'), _('Dec')]
		, AM: _('AM')
		, PM: _('PM')
		, am: _('am')
		, pm: _('pm')
		};



		
function lalert(lang, do_confirm, confirm_ok_action, confirm_cancel_action) {

	var a = 'empty';

	if(lang.error)
		a = lang.error;
	if(lang.info)
		a = lang.info;
	if(typeof lang === 'string')
		a = lang;

	
	var handler, div, bg, closebtn, okbtn;
	var close = function() {
		handler.fadeOut(400, function() { handler.remove(); });
		return false;
	};
		
	handler = $("<div id='alert_handler'></div>").hide().appendTo('body');
		
	bg = $("<div id='alert_background'></div>").appendTo(handler);
		
	div = $("<div id='alert_div'></div>").appendTo(handler);
	closebtn = $("<a id='alert_close' href='javascript:void(0)'><i class='fa fa-times'></i></div>")
		.appendTo(div);
		
	$("<div class='"+a+"' id='alert_message'></div>").html('').appendTo(div);
		
	okbtn = $("<button class='button alert_button'>"+_("OK")+"</button>").appendTo(div);
		
	if (do_confirm) {
		confirm_ok_action = (typeof confirm_ok_action !== "function") ? function(){} : confirm_ok_action;
		confirm_cancel_action = (typeof confirm_cancel_action !== "function") ? function(){} : confirm_cancel_action;
		okbtn.click(confirm_ok_action);
		$("<button class='button alert_button' style='margin-left: 10px;'>"+_T("Отмена")+"</button>").click(confirm_cancel_action).click(close).appendTo(div);
		bg.click(confirm_cancel_action);
		okbtn.click(confirm_cancel_action);
		closebtn.click(confirm_cancel_action);
	} 
			
	bg.click(close);
	okbtn.click(close);
	closebtn.click(close);
		
	handler.fadeIn(400);
}


function alert(a, do_confirm, confirm_ok_action, confirm_cancel_action) {
	var handler, div, bg, closebtn, okbtn;
	var close = function() {
		handler.fadeOut(400, function() { handler.remove(); });
		return false;
	};

	if (a.startsWith('l_')) {
		a = '<span class='+a+'></span>';
	}

	handler = $("<div id='alert_handler'></div>").hide().appendTo('body');

	bg = $("<div id='alert_background'></div>").appendTo(handler);

	div = $("<div id='alert_div'></div>").appendTo(handler);
	closebtn = $("<a id='alert_close' href='javascript:void(0)'><i class='fa fa-times'></i></div>")
		.appendTo(div);

	$("<div id='alert_message'></div>").html(a).appendTo(div);

	okbtn = $("<button class='button alert_button'>"+_("OK")+"</button>").appendTo(div);

	if (do_confirm) {
		confirm_ok_action = (typeof confirm_ok_action !== "function") ? function(){} : confirm_ok_action;
		confirm_cancel_action = (typeof confirm_cancel_action !== "function") ? function(){} : confirm_cancel_action;
		okbtn.click(confirm_ok_action);
		$("<button class='button alert_button' style='margin-left: 10px;'>"+_T("Отмена")+"</button>").click(confirm_cancel_action).click(close).appendTo(div);
		bg.click(confirm_cancel_action);
		okbtn.click(confirm_cancel_action);
		closebtn.click(confirm_cancel_action);
	} 
	
	bg.click(close);
	okbtn.click(close);
	closebtn.click(close);

	handler.fadeIn(400);
}

var saved = {};


function get_cookie(cookie_name) {
	var results = document.cookie.match ( '(^|;) ?' + cookie_name + '=([^;]*)(;|$)');
	
	if (results) {
		return (unescape(results[2]));
	}
	else {
		return null;
	}
}

function highlightReply(id, event, self=false) {
	

	if(is_mobile) {
		return false;
	}

	if(self==true){
		let el = get_reply(id)[0]
		el.classList.add('post_notice');

		setTimeout(function(){
			el.classList.remove('post_notice');
		}, 5000);
	
		event.preventDefault();
		return;
	}

	$('.highlighted').removeClass('highlighted');
	var $reply = get_reply(id);
	var reply = $reply[0];

	if($reply.length == 0)
		return false;

	$reply.addClass('highlighted');
	$reply.addClass('post_notice');


	setTimeout(function(){
		$reply.removeClass('post_notice');
	}, 3000);




	if (config.active_page == 'thread' && typeof event.preventDefault != "undefined")
		event.preventDefault();

	var reply_top = reply.getBoundingClientRect().top;
	var body_top = document.body.getBoundingClientRect().top;
	var boardlist_height = document.getElementsByClassName('header')[0].getBoundingClientRect().height;

	if(reply_top<0)
		reply_top-=10;

	var offset = (reply_top - body_top) - boardlist_height;

	window.scrollTo(0, offset);


	return true;
}





function generatePassword() {
	var pass = '';
	var chars = '{% endraw %}{{ config.genpassword_chars }}{% raw %}';
	for (var i = 0; i < 8; i++) {
		var rnd = Math.floor(Math.random() * chars.length);
		pass += chars.substring(rnd, rnd + 1);
	}
	return pass;
}

function lastReply()
{
 
	if(config.active_page == 'index')
	{
		
		$("#createbox").show();
			
		// apply trip
		$(".reply-subject[name=neoname]").prop('value', getModTrip());
		
		$("html, body").animate({ scrollTop: 0 }, "slow");
		$("#createbox").fadeIn(300);
		return;
	}

	var box = $("#replybox");
	var id = $('.post').length-1;
	box.hide();

	if(id >= 0)
	{
		var lastReply = $('.post')[id].id;
		var div = $('#'+lastReply);

		box.insertAfter(div);

		box.fadeIn(200);
		$('html').animate({ scrollTop: box.offset().top - ((window.innerHeight/2)-120)}, 200);
	}
	else
	{
		box.fadeIn(200);
	}
 
    document.getElementById('replybox_text').focus();

}

function getModTrip()
{

	var curTrip = localStorage.getItem('name');

	if(curTrip === null || curTrip.length < 1)
	{
	
		var text = "";
		var possible = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
	
		for (var i = 0; i < 5; )
		{
			var c1 = Math.random();
			var c2 = new Date().getTime();
			var c3 = c1 * c2;
			var c4 = c3.toString().substr(3, 2);
			var c5 = parseInt(c4);
 
			if(c5 < possible.length)
			{
				text += possible.charAt(c5);
				i++;
			}

		}
	
		return  '##mod' + text;
	}

	return curTrip;
}


function cite(event)
{
	var post = event.target.closest('.post');
	var replyBox = $id("replybox");

	if (replyBox === null) {
		window.location.href = '/' + post.dataset.board +  '/res/' + post.dataset.thread + '.html#'+post.dataset.post;
		return;
	}

	post.after(replyBox);

	if(replyBox.style.display == 'none') {

		if(is_mobile)
			replyBox.style.display = 'block';
		else 
			$("#replybox").fadeIn(300);
	}

	var pasteText  = '>>' + post.dataset.post + '\n' + getSelectedText(true);
	AddTag(pasteText, '', 'replybox_text');

	if(is_mobile) {
		$(".captcha-box").css('width', $(".reply").css('width'));
	} else { 
		setTimeout(function(){ $(".captcha-box").css('width', $(".reply").css('width'));}, 500);
	}
	 

	// анимацию прокрутки страницы по центру ответа
	$('html').animate({ scrollTop: $("#replybox").offset().top - ((window.innerHeight/2)-120)}, 100);
	$id('replybox_text').focus();

}

function rememberStuff() 
{
	if (document.forms.post) {
		if (document.forms.post.password) {
			if (!localStorage.password)
				localStorage.password = generatePassword();
			document.forms.post.password.value = localStorage.password;
		}
		

		if (localStorage.userflags && document.forms.post.elements['user_flag']) {
			var userflags = JSON.parse(localStorage.userflags);
			document.forms.post.elements['user_flag'].value = userflags[config.board_uri];
		}
		
		if (sessionStorage.body) {
			var saved = JSON.parse(sessionStorage.body);
			if (get_cookie('{% endraw %}{{ config.cookies.js }}{% raw %}')) {
				// Remove successful posts
				var successful = JSON.parse(get_cookie('{% endraw %}{{ config.cookies.js }}{% raw %}'));
				for (var url in successful) {
					saved[url] = null;
				}
				sessionStorage.body = JSON.stringify(saved);
				
				document.cookie = '{% endraw %}{{ config.cookies.js }}{% raw %}={};expires=0;path=/;';
			}
			if (saved[document.location]) {
				document.forms.post.body.value = saved[document.location];
			}
		}
		
		if (localStorage.body) {
			document.forms.post.body.value = localStorage.body;
			localStorage.body = '';
		}
	}
}

var script_settings = function(script_name) {
	this.script_name = script_name;
	this.get = function(var_name, default_val) {
		if (typeof tb_settings == 'undefined' ||
			typeof tb_settings[this.script_name] == 'undefined' ||
			typeof tb_settings[this.script_name][var_name] == 'undefined')
			return default_val;
		return tb_settings[this.script_name][var_name];
	}
};

function init() {
	//	store highlighted text for citeReply()
	if (document.querySelector('form[name="postcontrols"]') !== null) {
		document.querySelector('form[name="postcontrols"]').addEventListener('mouseup', function (e) {
			sessionStorage.quoteClipboard = window.getSelection().toString();
		});
	}

	// just enable jquery, almost every script requires it by now. more and more main.js functions are going to start requiring it
	$('.post-table-options').css('display', 'none');
	window.optionsShowing = false;
	$(document).on('click', '.show-post-table-options', function(e) {
		if (!window.optionsShowing) { 
			$('.show-post-table-options').html('[&#9660; '+_('Hide post options &amp; limits')+']'); 
			$('.post-table-options').css('display', 'table');
			window.optionsShowing = true;
		} else { 
			$('.show-post-table-options').html('[&#9654; '+_('Show post options &amp; limits')+']'); 
			$('.post-table-options').css('display', 'none');
			window.optionsShowing = false;
		}; 
	
		return false;
	});

	{% endraw %}	
	{% if config.allow_delete %}
	if (document.forms.postcontrols && document.forms.postcontrols.password) {
		document.forms.postcontrols.password.value = localStorage.password;
	}
	{% endif %}
	{% raw %}
	
	if (window.location.hash.indexOf('q') != 1 && window.location.hash.substring(1))
		highlightReply(window.location.hash.substring(1));
}


onready_callbacks = [];
function onready(fnc) {
	onready_callbacks.push(fnc);
}

function ready() {
	for (var i = 0; i < onready_callbacks.length; i++) {
		onready_callbacks[i]();
	}
}

{% endraw %}

var post_date = "{{ config.post_date }}";



{% if config.statcounter_project and config.statcounter_security %}
var sc = document.createElement('script');
sc.type = 'text/javascript';
sc.innerHTML = 'var sc_project={{ config.statcounter_project }};var sc_invisible=1;var sc_security="{{ config.statcounter_security }}";var scJsHost=(("https:" == document.location.protocol) ? "https://secure." : "http://www.");document.write("<sc"+"ript type=text/javascript src="+scJsHost+"statcounter.com/counter/counter.js></"+"script>");';
var s = document.getElementsByTagName('script')[0];
s.parentNode.insertBefore(sc, s);
{% endif %}



{% if config.encryption.enable == true %}
config['public_key'] = `{{config.encryption.public_key}}`;
{% endif %}
